
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Tue Oct 03 11:18:10 CDT 2006
//----------------------------------------------------

package org.gridchem.client;

import java_cup.runtime.*;
import javax.swing.*;
import java.util.*;
import java.io.*;

/** CUP v0.10k generated parser.
  * @version Tue Oct 03 11:18:10 CDT 2006
  */
public class WavefunctionParser extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public WavefunctionParser() {super();}

  /** Constructor which sets the default scanner. */
  public WavefunctionParser(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\003\000\002\003\003\000\002\002\004\000\002\004" +
    "\004" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\006\000\004\004\005\001\002\000\004\002\001\001" +
    "\002\000\004\006\010\001\002\000\004\002\007\001\002" +
    "\000\004\002\000\001\002\000\004\002\uffff\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\006\000\006\003\005\004\003\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$WavefunctionParser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$WavefunctionParser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$WavefunctionParser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$WavefunctionParser$actions {

 
  //__________________________________
  public static boolean DEBUG = true;
 

  private final WavefunctionParser parser;

  /** Constructor */
  CUP$WavefunctionParser$actions(WavefunctionParser parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$WavefunctionParser$do_action(
    int                        CUP$WavefunctionParser$act_num,
    java_cup.runtime.lr_parser CUP$WavefunctionParser$parser,
    java.util.Stack            CUP$WavefunctionParser$stack,
    int                        CUP$WavefunctionParser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$WavefunctionParser$result;

      /* select the action based on the action number */
      switch (CUP$WavefunctionParser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // scfintro ::= FOUNDITER RUNTYP 
            {
              Object RESULT = null;
		 if (DEBUG) System.out.println("CUP:WFparser: gaussian:  found FOUNDITER "); 
              CUP$WavefunctionParser$result = new java_cup.runtime.Symbol(2/*scfintro*/, ((java_cup.runtime.Symbol)CUP$WavefunctionParser$stack.elementAt(CUP$WavefunctionParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$WavefunctionParser$stack.elementAt(CUP$WavefunctionParser$top-0)).right, RESULT);
            }
          return CUP$WavefunctionParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= startpt EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$WavefunctionParser$stack.elementAt(CUP$WavefunctionParser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$WavefunctionParser$stack.elementAt(CUP$WavefunctionParser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$WavefunctionParser$stack.elementAt(CUP$WavefunctionParser$top-1)).value;
		RESULT = start_val;
              CUP$WavefunctionParser$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$WavefunctionParser$stack.elementAt(CUP$WavefunctionParser$top-1)).left, ((java_cup.runtime.Symbol)CUP$WavefunctionParser$stack.elementAt(CUP$WavefunctionParser$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$WavefunctionParser$parser.done_parsing();
          return CUP$WavefunctionParser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // startpt ::= scfintro 
            {
              Object RESULT = null;
		 if (DEBUG) System.out.println("CUP:WFParser: gaussian:  end of parse tree "); 
	
 	     
              CUP$WavefunctionParser$result = new java_cup.runtime.Symbol(1/*startpt*/, ((java_cup.runtime.Symbol)CUP$WavefunctionParser$stack.elementAt(CUP$WavefunctionParser$top-0)).left, ((java_cup.runtime.Symbol)CUP$WavefunctionParser$stack.elementAt(CUP$WavefunctionParser$top-0)).right, RESULT);
            }
          return CUP$WavefunctionParser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

